exports = async function(descriptionName, animation){
  const serviceName = "mongodb-atlas";
  const dbName = "HrDataDev";

  const db = context.services.get(serviceName).db(dbName);
  const collection = db.collection("calibAnimationsDescription");

  let description;

  // Find description
  try {
    description = await collection.findOne({name: descriptionName});
  } catch(err) {
    console.log("Error occurred while getting animation:", err.message);
    return { error: err.message };
  }
  
  let animations = description.animations || []
  const oldAnimation = animations.find(({id}) => id === animation.id )

  // Check that the animation name is not repeated
  if(animations.some(({name, id}) => name === animation.name && id !== animation.id)) {
    return { error: 'Name already exists' };
  }

  // Check that the animation has at least one motion
  if(!animation.motions?.length) {
    return { error: 'Must have at least one motion' };
  }

  // Add id to new motions
  animation.motions = animation.motions.map((motion) => {
    if (motion.id) {
      return motion
    }
    return {id: (new BSON.ObjectId()).toString(), ...motion}
  })
  
  // Update animations list
  if(!animation.id) {
    animations.push({id: (new BSON.ObjectId()).toString(), ...animation})
  } else {
    const index = animations.findIndex(({id}) => id === animation.id)
    if(index === -1) {
      animations.push(animation)  
    } else {
      animations[index] = animation  
    }
  }

  // Save updated description
  try {
    await collection.updateOne({name: descriptionName}, {...description, animations});
  } catch(err) {
    console.log("Error occurred while updating animation:", err.message);
    return { error: err.message };
  }

  // Delete old images
  try {
    if(oldAnimation) {
      const oldImages = oldAnimation?.images || []
      const images = animation?.images || []
      if(oldImages.length) {
        context.functions.execute('images_deleteOld', oldImages, images)
      }
    }
  } catch(err) {
    console.log("Error occurred while deleting old images:", err.message);
  }

  // Get updated description
  try {
    description = await collection.findOne({name: descriptionName});
  } catch(err) {
    console.log("Error occurred while getting animation:", err.message);
    return { error: err.message };
  }

  return { result: description };
};